# docker-composeバージョンの宣言
# https://docs.docker.com/compose/compose-file/
version: '3.7'
x-logging:
  &default-logging
  options:
    max-size: '12m'
    max-file: '5'
  driver: json-file

services:
  web:
    #    restart: always
    build:
      context: ./django
      dockerfile: Dockerfile
    container_name: web
#    environment:
#      VIRTUAL_HOST: web.test
#      VIRTUAL_PORT: 80
    # --max-requests 1は開発中にファイルを変更しても反映されないのでさせるために付与。
    # 付けない場合はファイル更新を通知するために下記をする必要がある
    # docker exec -it django_web pgrep gunicorn
    # docker exec -it django_web kill -HUP [↑で確認した番号]
    command: bash -c "sleep 5; gunicorn config.wsgi --workers 2 --bind 0.0.0.0:8000 --max-requests 1"
    volumes:
      - ./django:/usr/src/app
    depends_on:
      - "db"
    env_file: .env
    ports:
      - "8000"
    logging: *default-logging

  db:
#    restart: always
    build:
      context: ./postgresql
      dockerfile: Dockerfile
      args:
        - DB_LANG=ja_JP
    container_name: db
    env_file: .env
    command: 'postgres -c config_file="/etc/postgresql.conf"'
    volumes:
      - db_data:/var/lib/postgresql/data
      # down -vなどでボリュームがない時などを含めた初回起動時に実行されるファイルを指定
      - ./postgresql/sql:/docker-entrypoint-initdb.d
      - ./postgresql/postgresql.conf:/etc/postgresql.conf
    ports:
      - "5432:5432"
    logging: *default-logging

  cache:
#    restart: always
    image: redis:alpine
    container_name: "cache"
    ports:
      - "6379:6379"
    logging: *default-logging

  nginx:
#    restart: always
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./django/static:/static
    ports:
      - "8000:80"
    depends_on:
      - "web"
    logging: *default-logging
#
#  # Let's Encrypt取得・更新用のコンテナ
#  letsencrypt-nginx:
#    container_name: letsencrypt-nginx
#    restart: always
#    image: jrcs/letsencrypt-nginx-proxy-companion
#    privileged: true
#    depends_on:
#      - "proxy"
#    volumes:
#      - {{ project_cert_dir }}:/etc/nginx/certs
#      - htpasswd:/etc/nginx/htpasswd
#      - vhost:/etc/nginx/vhost.d
#      - html:/usr/share/nginx/html
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    logging: *default-logging
#
#  postfix:
#    container_name: postfix
#    restart: always
#    build:
#      context: ./docker/postfix
#      args:
#        hostname: {% if sub_domain is defined %}{{ sub_domain }}.{% endif %}{{ domain_name }}
#        domain_name: {% if sub_domain is defined %}{{ sub_domain }}.{% endif %}{{ domain_name }}
#    ports:
#      - "25"
#      - "110"
#    logging: *default-logging

volumes:
  htpasswd:
  vhost:
  html:
  db_data:
