name: Run build test

on: [push]

jobs:
  front_build:
    # 実行するインスタンス
    runs-on: ubuntu-latest
    # nodeのバージョン一覧
    strategy:
      matrix:
        node-version: ['12.x']
    # 各ステップの実行定義
    steps:
      # チェックアウト
      - uses: actions/checkout@v1

      # 使用するnodeのバージョンを指定
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # パッケージのインストール
      - name: install
        run: cd frontend/src && yarn install --frozen-lockfile

      # アプリのビルド
      - name: build
        run: cd frontend/src && yarn build

      # gh-pagesを使って公開https://qiita.com/nouka/items/aae1e68dfe81e4441c4f
#      - name: deploy
#        uses: peaceiris/actions-gh-pages@v2
#        env:
#          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
#          PUBLISH_BRANCH: gh-pages
#          PUBLISH_DIR: ./build
#
#      - name: Cache dependencies
#        uses: actions/cache@v1
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-

  back_build:
    # 実行するインスタンス
    runs-on: ubuntu-latest
    # pythonのバージョン一覧
    strategy:
      matrix:
        python-version: [ '3.7', '3.8' ]
    steps:
      # チェックアウト
      - uses: actions/checkout@v1

      # 使用するpythonのバージョンを指定
      - name: Use Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipenv and dependencies
        run: |
          cd backend/containers/django
          python -m pip install --upgrade pip
          pip install pipenv --upgrade-strategy=only-if-needed
          pipenv install --dev
      - name: Run test
        run: |
          pipenv run tests
